<?php
/**
 * @file
 * Aids in the development of input filters by allowing for the presentation
 * of uncached post-filtered text, both as formatted and the original HTML. It's
 * a bit hard to explain, but if you check out the screenshot on the Drupal.org
 * project page, you should get a quick idea of what it does.
 *
 * @todo Use AJAX to automatically load filtered text on form submission and
 * when the browser window is brought to the front (as would happen if a user is
 * switching between their code editor and their browser).
 */

/**
 * Implements hook_menu().
 */
function devel_if_menu() {
  return array(
    'devel/if' => array(
      'title' => 'Input filter tester',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('devel_if_tester'),
      'description' => 'Aids in the testing of input filters.',
      'access arguments' => array('access devel information'),
      'menu_name' => 'devel',
    ),
  );
}

/**
 * Form callback for the form into which the user can enter text to be filtered.
 *
 * We also show the result of filtering of previously-entered text.
 */
function devel_if_tester($form, $form_state) {
  $form = array(
    // '#redirect' => FALSE means that the user will be sent back to this form
    // after submission.
    '#redirect' => FALSE,
    '#attached' => array(
      'css' => array(
        drupal_get_path('module', 'devel_if') . '/devel_if.css',
      ),
    ),
    'input' => array(
      '#type' => 'text_format',
      '#title' => t('Input'),
      '#weight' => 20,
    ),
    'submit' => array(
      '#type' => 'submit',
      '#value' => t('Submit'),
      '#weight' => 30,
    ),
  );
  // We abuse $_SESSION to see what the result of any previous filtering might
  // have been.
  if (isset($_SESSION['devel_if'])) {
    $form['output'] = array(
      '#weight' => 0,
      '#prefix' => '<div id="devel-if-output">',
      '#suffix' => '</div>',
      'output_format' => array(
        '#type' => 'item',
        '#title' => t('Formatted output'),
        // The extra <div> will aid in finding the text to replace after an AJAX
        // callback, once that is implemented.
        '#markup' => '<div class="devel-if-output-content">' . $_SESSION['devel_if']['output'] . '</div>',
        '#weight' => 0,
      ),
      'output_html' => array(
        '#type' => 'item',
        '#title' => t('HTML output'),
        '#markup' => '<div class="devel-if-output-content"><pre>' . htmlentities($_SESSION['devel_if']['output']) . '</pre></div>',
        '#weight' => 10,
      ),
    );
    $form['input']['#default_value'] = $_SESSION['devel_if']['input']['value'];
    $form['input']['#format'] = $_SESSION['devel_if']['input']['format'];
    unset($_SESSION['devel_if']);
  }
  return $form;
}

/**
 * Submission callback for our tester form.
 */
function devel_if_tester_submit($form, $form_state) {
  $_SESSION['devel_if'] = array(
    'output' => check_markup($form_state['values']['input']['value'], $form_state['values']['input']['format']),
    'input' => $form_state['values']['input'],
  );
}
